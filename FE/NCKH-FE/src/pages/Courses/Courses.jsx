import React, { useState } from 'react';
import './Courses.css';

const allCourses = [
  {
    id: 1,
    title: 'T·ª™ V·ª∞NG - VOCABULARY',
    category: 'Kh√°c',
    updatedAt: '30/08/2025 18:06',
    author: 'ros xoan',
    downloads: 0,
    type: 'word',
  },
  {
    id: 2,
    title: 'Chuy√™n ƒë·ªÅ to√°n 11',
    category: 'CNTT',
    updatedAt: '30/08/2025 18:05',
    author: 'Nghia',
    downloads: 0,
    type: 'video',
  },
  {
    id: 3,
    title: 'Kh·∫£o s√°t h√†m ph√¢n th·ª©c',
    category: 'CNTT',
    updatedAt: '30/08/2025 18:07',
    author: 'Nghia',
    downloads: 0,
    type: 'video',
  },
  {
    id: 4,
    title: 'Ng·ªØ VƒÉn 4',
    category: 'Marketing',
    updatedAt: '30/08/2025 18:08',
    author: 'Hong Dao',
    downloads: 0,
    type: 'ppt',
  },
  {
    id: 5,
    title: 'Luy·ªán t·∫≠p ch∆∞∆°ng 1',
    category: 'CNTT',
    updatedAt: '30/08/2025 18:09',
    author: 'Th·∫ßy Quang',
    downloads: 0,
    type: 'video',
  },
  {
    id: 6,
    title: 'C√ÇU H·ªéI THEO B√ÄI',
    category: 'QTKD',
    updatedAt: '30/08/2025 18:06',
    author: 'Ha Yran',
    downloads: 0,
    type: 'word',
  },
  {
    id: 7,
    title: 'B√†i 1. T√¨nh y√™u.',
    category: 'QTKD',
    updatedAt: '30/08/2025 18:05',
    author: 'Ha Yran',
    downloads: 1,
    type: 'word',
  },
  {
    id: 8,
    title: 'tn_toan9_kntt_1_bai_1',
    category: 'Marketing',
    updatedAt: '30/08/2025 18:05',
    author: 'Tr·∫ßn Qu·ªëc Chung',
    downloads: 2,
    type: 'file',
  },
];

const icons = {
  word: 'üìÑ',
  video: 'üé•',
  ppt: 'üìä',
  file: 'üìÅ',
};

const categories = ['T·∫•t c·∫£', 'CNTT', 'QTKD', 'Marketing', 'Kh√°c'];

const Courses = () => {
  const [searchTerm, setSearchTerm] = useState('');
  const [filterCategory, setFilterCategory] = useState('T·∫•t c·∫£');

  // L·ªçc kh√≥a h·ªçc d·ª±a tr√™n searchTerm v√† filterCategory
  const filteredCourses = allCourses.filter(course => {
    const matchesCategory = filterCategory === 'T·∫•t c·∫£' || course.category === filterCategory;
    const matchesSearch = course.title.toLowerCase().includes(searchTerm.toLowerCase());
    return matchesCategory && matchesSearch;
  });

  return (
    <div className="courses">
      <h2>T√†i li·ªáu m·ªõi nh·∫•t</h2>

      <div className="controls">
        <input
          type="text"
          placeholder="T√¨m ki·∫øm kh√≥a h·ªçc..."
          value={searchTerm}
          onChange={e => setSearchTerm(e.target.value)}
          className="search-input"
        />

        <select
          value={filterCategory}
          onChange={e => setFilterCategory(e.target.value)}
          className="category-select"
        >
          {categories.map(cat => (
            <option key={cat} value={cat}>{cat}</option>
          ))}
        </select>
      </div>

      <div className="course-grid">
        {filteredCourses.map(course => (
          <div key={course.id} className="course-card">
            <div className="icon">{icons[course.type]}</div>
            <h3 className="title" title={course.title}>{course.title}</h3>
            <p className="category">{course.category}</p>
            <p className="updatedAt">Ng√†y c·∫≠p nh·∫≠t: {course.updatedAt}</p>
            <p className="author">Ng∆∞·ªùi so·∫°n: <strong>{course.author}</strong></p>
            <p className="downloads">S·ªë l∆∞·ª£t t·∫£i: {course.downloads}</p>
          </div>
        ))}

        {filteredCourses.length === 0 && (
          <p className="no-results">Kh√¥ng t√¨m th·∫•y kh√≥a h·ªçc ph√π h·ª£p.</p>
        )}
      </div>
    </div>
  );
};

export default Courses;
